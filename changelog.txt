8.72
- Added always-visible green progress line to waveform displays.
- Progress line shows current playback position even when waveform is loading.
- Enhanced visual feedback for seeking and progress tracking.
- Incremented build version to 8.72.

8.71
- Fixed animation hanging and dislike button crashes.
- Improved UI responsiveness during file operations.
- Added error handling for like/dislike actions.
- Preserved playback priority during sorting operations.
- Reduced delays in file sorting operations.
- Incremented build version to 8.71.

 - Miniplayer: adaptive 2–4 line title with dynamic font scaling.

- Increased axis label font size in shared spectrogram image.
- Incremented build version to 8.20.

- Finalized shared spectrogram image styling.
- Incremented build version to 8.21.

- Enhanced spectrogram quality with higher FFT resolution and improved color mapping.
 - Added on-device BPM and musical key estimation to Spectrogram Analysis card.
 - Shows tempo and key with confidence; cached per file for speed.
 - Added Camelot key display alongside musical key.
 - Main/Mini players show Time | Bitrate | Size | BPM | Key under title.
 - Shared spectrogram image includes BPM/Key line.
 - Analyze buttons in main/mini; spinner during analysis.
 - BPM estimator constrained to 60–145 with folding; accuracy improved for MP3.
 - MP3 analysis uses PCM decode via MediaCodec for better results.
 - Miniplayer: filename +20%, play icon -30%, metadata -10%, spacing +20%.
 - Shared spectrogram embeds current BPM/Key.
- Implemented Blackman window function for cleaner frequency analysis.
- Incremented build version to 8.31.

- Fixed critical build errors, including missing permissions, deprecated libraries, and incorrect StateFlow usage.
- Patched several deprecation warnings in the UI code.
- Corrected build version to 8.32.

- Optimized AIFF file handling for better performance and responsiveness.
- Improved error handling for media playback failures with detailed error messages.
- Enhanced temp file cache management with size limits and better cleanup.
- Added missing attribution tags to AndroidManifest.xml to fix AppOps warnings.
- Reduced FFmpeg preparation timeout for better responsiveness.
- Incremented build version to 8.33.

- Fixed critical OutOfMemoryError in file scanning with memory checks and file limits.
- Fixed FileNotFoundException by adding URI validation before ExoPlayer playback.
- Fixed DeadObjectException in media session management with proper cleanup.
- Added memory safety checks to prevent crashes during large file operations.
- Limited file scanning to 1000 files maximum to prevent memory exhaustion.
- Incremented build version to 8.34.

- Fixed duration extraction failures and resource conflicts in song loading.
- Fixed MediaExtractor instantiation failures with better error handling.
- Fixed setDataSource failures in MediaMetadataRetriever with URI validation.
- Fixed concurrent access issues by limiting duration extraction to single thread.
- Added delays between operations to prevent resource conflicts.
- Improved error logging for better debugging of song loading issues.
- Incremented build version to 8.35.

- Fixed large AIFF file playback issues (110MB+ files).
- Increased temp file size limit from 100MB to 200MB for large AIFF files.
- Added optimized duration extraction for large files (skips MediaExtractor for 150MB+ files).
- Improved FFmpeg preparation timeout for large files (10 seconds vs 3 seconds).
- Added file size estimation for large AIFF files when MediaExtractor fails.
- Enhanced error handling and logging for large file processing.
- Incremented build version to 8.36.

- Successfully tested and confirmed large AIFF file playback working.
- All duration extraction and playback optimizations verified.
- Incremented build version to 8.37.

- Fixed search functionality causing app crashes and freezing.
- Implemented proper debounced search to prevent multiple concurrent searches.
- Added memory checks and file limits to prevent search memory issues.
- Fixed race conditions in search implementation with proper job cancellation.
- Optimized search performance with batched file processing.
- Added proper cleanup to prevent memory leaks in search functionality.
- Incremented build version to 8.38.

- Fixed theme dropdown functionality and UI consistency.
- Replaced hardcoded colors with MaterialTheme.colorScheme throughout the app.
- Fixed playlist card colors to use theme colors (tertiary for liked, error for rejected).
- Updated waveform colors to use theme colors instead of hardcoded gray.
- Ensured all dropdowns and UI elements follow the selected theme color scheme.
- Improved theme color consistency across all components.
- Incremented build version to 8.39.

- Fixed theme selection not working by properly observing theme state in MainActivity.
- Updated media control buttons with modern Android 16 Material 3 design.
- Replaced old IconButton style with modern Card-based buttons for previous/next.
- Enhanced FloatingActionButton for play/pause with better elevation and sizing.
- Applied consistent modern styling to both main player and mini player controls.
- Improved button spacing and visual hierarchy for better UX.
- Incremented build version to 8.40.

- Fixed critical OutOfMemoryError crashes during search functionality.
- Reduced theme polling frequency from 100ms to 1000ms to reduce memory pressure.
- Implemented aggressive memory management in search with garbage collection.
- Reduced search batch sizes: music files (500→200), liked/rejected (200→100).
- Limited search results to 25 items instead of 50 to prevent UI memory issues.
- Increased memory threshold check to 100MB before allowing search operations.
- Added System.gc() call before search to free up memory proactively.
- Incremented build version to 8.41.

- Fixed theme dropdown not showing by replacing ExposedDropdownMenu with custom dialog.
- Created dedicated theme selection dialog with scrollable list of all themes.
- Added visual theme preview with color circles and hex codes for each theme.
- Improved theme selection UX with clear visual indicators and better layout.
- Further reduced search memory usage: music files (200→100), liked/rejected (100→50).
- Increased memory threshold to 150MB and added delay after garbage collection.
- Enhanced search stability with more aggressive memory management.
- Incremented build version to 8.42.

- Made media control buttons 20% smaller for better UI proportions.
- Reduced main player button sizes: previous/next (48→38dp), play/pause (56→45dp).
- Reduced mini player button sizes: previous/next (36→29dp), play/pause (44→35dp).
- Restored original v8.0 search functionality with simple, efficient approach.
- Removed overly aggressive memory restrictions that were limiting search results.
- Kept basic memory protection (50MB threshold) to prevent crashes.
- Search now works like v8.0 but with debouncing and race condition protection.
- Incremented build version to 8.43.

- Restored exact v8.3 search functionality - completely clean and simple.
- Removed all memory management, debouncing, and job cancellation from search.
- Search now works exactly like v8.3: fast, simple, and reliable.
- Changed settings text from "Dynamic Colors" to "Enable Theme" for clarity.
- Incremented build version to 8.44.

- Added 1.5-second delay to search to prevent crashes from rapid typing.
- Implemented proper debouncing with job cancellation to prevent concurrent searches.
- Fixed text color contrast issues by replacing hardcoded colors with theme-aware colors.
- Updated delete buttons to use MaterialTheme.colorScheme.error and onError.
- Updated create ZIP button to use MaterialTheme.colorScheme.tertiary and onTertiary.
- Improved text contrast across all UI elements for better readability.
- Incremented build version to 8.45.

- Enhanced search stability with comprehensive error handling and try-catch blocks.
- Added file limit (1000 files) to prevent memory issues during search operations.
- Improved search logging for better debugging and crash analysis.
- Added proper cleanup for search jobs to prevent memory leaks.
- Fixed search crashes by limiting concurrent operations and adding safety checks.
- Incremented build version to 8.46.

- Fixed search crashes by adding minimum query length (2 characters) and better error handling.
- Added dropdown info messages for like/reject actions with auto-hide after 3 seconds.
- Implemented audio playback prioritization - file operations now wait for current file to load and waveform to generate.
- Added delays between file operations to prevent memory issues with large files.
- Enhanced search with better file validation and result limiting (50 results max).
- Incremented build version to 8.47.

- Moved informational messages from bottom snackbar to better display under header.
- Replaced snackbar system with discreet card-based info messages positioned under the header.
- Added support for different message types: info, success, error, and loading with appropriate colors and icons.
- Improved message visibility and user experience with theme-aware colors and proper contrast.
- All existing messages (loading files, sorting files, etc.) now display in the new location.
- Incremented build version to 8.48.

- Added animated info messages with fade in/out effects like mini player.
- Enhanced info message display with better positioning on top of main card.
- Fixed search crashes by increasing minimum query length to 3 characters and 2-second delay.
- Improved search stability with more conservative file limits (200 files max, 25 results max).
- Enhanced playback prioritization - now moves to next song first, waits for playback and waveform generation.
- Added retry mechanism to ensure playback is stable before file operations.
- Increased delays between file operations for better stability with large files.
- Incremented build version to 8.49.

- Fixed search crashes with ultra-conservative approach: 100 files max, 20 results max, batch processing.
- Repositioned info messages to be absolutely positioned on top without moving other elements.
- Made info messages smaller (90% width, smaller text/icons) with fade in/out only animations.
- Added 1.5-second delay after waveform appearance before showing info messages.
- Enhanced search with batch processing (20 files per batch) and delays between batches.
- Improved memory management with smaller batch sizes and more frequent delays.
- Incremented build version to 8.50.

- Fixed info message overlay to not cover entire screen - now positioned directly under header.
- Improved info message positioning and sizing for better visibility without blocking UI.
- Enhanced search stability with 2-second debounce and 3+ character minimum requirement.
- Fixed UI layout issues where info messages were hiding other elements.
- Incremented build version to 8.51.

8.52
- Search: added immediate (manual) search button and Enter key trigger.
- Search: unlimited results across all playlists; no artificial limits.
- Search dropdown: themed to follow Material color scheme and auto-expands on results.
- Info message: centered text, removed close button, reduced padding, adjusted offset.
- Misc: stability tweaks; kept 2s debounced search in background when typing.
- Incremented build version to 8.52.

8.53
- Liked subfolder selection no longer auto-plays the first track; current playback is preserved and index set to current file if present.
- Started theming dialogs/popups to follow Material color scheme consistently.
- Incremented build version to 8.53.

8.54
- Subfolder picker (left of TODO/Liked): added multi-select checkboxes and View button to aggregate selected liked subfolders into the Liked playlist; preserves current playback.
- Removed redundant "View Liked Subfolders" from Actions menu.
- Dialog theming improvements and centered Settings title.
- Incremented build version to 8.54.

8.55
- Restored waveform seeking in main/mini players (re-enabled duration for seek only).
- Kept time labels and playlist-time/bitrate display removed for performance.
- Disabled background duration extraction when loading folders/subfolders.
- Multi-select liked subfolders in tabs row refined and compacted.
- Incremented build version to 8.55.

8.56
- Remember recent source folders (up to 10) and show under the big Rescan button (two columns).
- Rescan button shows the last two path segments of the current source.
- Kept performance optimizations and waveform seeking from previous version.
- Incremented build version to 8.56.

8.57
- UI: Added recent source history buttons (2-column list) under Rescan; Rescan shows last two path parts.
- Liked subfolder picker: compact multi-select checkboxes and View button; kept in tabs row dialog only.
- Performance: Removed time/bitrate lines in lists; skipped background duration extraction; waveform seeking restored.
- Stability: Preparing logcat monitoring for crash investigation.
- Incremented build version to 8.57.

8.58
- Source history buttons now only set source; scanning happens only on Rescan.
- Adjusted rescan label and recent sources UX; crash monitoring improvements.
 - Incremented build version to 8.58.

8.59
- Added smart automatic cache trimming with LRU eviction and safety for in-use files.
- New CacheManager caps cache (preferred 512MB, hard 1GB) and runs periodically.
- Protected active FFmpeg data source and temp WAV paths during cleanup.
- Integrated with periodic maintenance; no interference with playback/workflows.
- Incremented build version to 8.59.
- Incremented build version to 8.58.

8.66
- Optimized Amplituda waveform generation for faster processing.
- Changed compress parameter from 10 to 8 samples/second (25% faster generation).
- Maintained high quality with Compress.AVERAGE algorithm.
- Updated all waveform views: SharedWaveformState, ScrollableWaveformView, AmplitudaWaveformView.
- Incremented build version to 8.66.

8.67
- Major AIFF file optimization for waveform generation.
- AIFF files now use 2 samples/second (vs 8 for other formats) for 4x faster processing.
- AIFF files are uncompressed, so fewer samples still provide excellent quality.
- Added file type detection in all waveform components.
- Enhanced logging to show file type and samples/second used.
- Updated all waveform views: SharedWaveformState, ScrollableWaveformView, AmplitudaWaveformView.
- Incremented build version to 8.67.

8.68
- Maximum AIFF optimization: reduced to 1 sample/second for 8x faster processing.
- AIFF files now use minimal samples for maximum speed while maintaining quality.
- Updated all waveform components with 1 sample/second for AIFF files.
- Enhanced comments to reflect maximum speed optimization.
- Incremented build version to 8.68.

8.69
- AIFF optimization refinement: maintained 1 sample/second for optimal balance.
- Amplituda library requires integer values for samples/second parameter.
- AIFF files continue to use minimal samples for maximum speed while maintaining quality.
- Updated all waveform components with consistent 1 sample/second for AIFF files.
- Enhanced comments to reflect ultra-minimal sample optimization approach.
- Incremented build version to 8.69.

8.70
- Universal waveform optimization: reduced all non-AIFF formats from 8 to 3 samples/second.
- MP3, FLAC, WAV files now use 3 samples/second for 2.7x faster processing.
- AIFF files maintain 1 sample/second for maximum speed.
- Balanced approach: faster processing while maintaining good visual quality.
- Updated all waveform components with optimized samples/second for all formats.
- Incremented build version to 8.70.

8.71
- Fixed animation hanging during like/dislike operations.
- Reduced delays in file operations to prevent UI blocking (3000ms → 1000ms, 2000ms → 500ms).
- Added comprehensive error handling to prevent dislike button crashes.
- Implemented safe file sorting with proper thread management.
- Preserved playback priority during file operations using Dispatchers.IO.
- Added try-catch blocks to all like/dislike button handlers and swipe gestures.
- Enhanced stability for multi-file operations with reduced delays.
- Incremented build version to 8.71.
